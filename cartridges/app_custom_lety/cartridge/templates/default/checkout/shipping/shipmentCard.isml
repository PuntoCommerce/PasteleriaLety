<div class="card-body shipping-content">
    <form class="shipping-form" autocomplete="on" novalidate action="${shipmentLoopState ? URLUtils.url('CheckoutAddressServices-AddNewAddress') : URLUtils.url(
                                                                     'CheckoutShippingServices-SubmitShipping')}"
        data-address-mode="${shippingModel.matchingAddressId ? 'edit' : 'new'}" <isprint
        value=${pdict.forms.shippingForm.attributes} encoding="off" />
    >
    <isif condition="${lineItem}">
        <input name="productLineItemUUID" type="hidden" value="${lineItem.UUID}" />
    </isif>

    <input name="originalShipmentUUID" type="hidden" value="${shippingModel.UUID}" />
    <input name="shipmentUUID" type="hidden" value="${shippingModel.UUID}" />

    <div class="shipping-address ${pdict.order.usingMultiShipping ? 'd-none' : ''}">
        <fieldset class="shipping d-none">
            <isinclude template="checkout/shipping/shippingMethodCards" />
        </fieldset>

        <fieldset class="shipment-selector-btns">
            <h3>${Resource.msg('heading.shipping.method', 'checkout', null)}</h3>
            <div class="row">
                <div class="col-12 col-lg-6 mb-3">
                    <button id="selectShipping" class="shipping-check-card h-100">
                        <div class="check-decorator">
                            <div id="outer-circle">
                                <div id="inner-circle">

                                </div>
                            </div>
                        </div>
                        <img class="mb-2" src="${URLUtils.staticURL('/images/checkout/shippingIcon.svg')}"
                            alt="Envío a domicilio" />
                        <div class="shipping-card-header mb-2">
                            ${Resource.msg('check.shipping.method.card.header', 'checkout', null)}
                        </div>
                        <div>
                            ${Resource.msg('check.shipping.method.card', 'checkout', null)}
                        </div>
                    </button>
                </div>
                <div class="col-12 col-lg-6 mb-3">
                    <button id="selectPickup" class="shipping-check-card h-100">
                        <div class="check-decorator">
                            <div id="outer-circle">
                                <div id="inner-circle">

                                </div>
                            </div>
                        </div>
                        <img class="mb-2" src="${URLUtils.staticURL('/images/checkout/pickupIcon.svg')}"
                            alt="Envío a domicilio" />
                        <div class="shipping-card-header mb-2">
                            ${Resource.msg('check.pickup.method.card.header', 'checkout', null)}
                        </div>
                        <div>
                            ${Resource.msg('check.pickup.method.card', 'checkout', null)}
                        </div>
                    </button>
                </div>
            </div>
        </fieldset>

        <fieldset
            class="shipment-selector-block ${(pdict.order.usingMultiShipping || shipmentLoopState) || (pdict.customer.addresses && pdict.customer.addresses.length >
                                           0) && !shippingModel.selectedShippingMethod.storePickupEnabled ? '' : 'd-none'} ">
            <isinclude template="checkout/shipping/shipmentSelector" />
        </fieldset>

        <fieldset class="pickup-in-store" data-url="${shippingModel.pickupInstoreUrl}">
            <isif condition="${shippingModel.productLineItems.items[0].fromStoreId}">
                <isinclude
                    url="${URLUtils.url('Stores-GetStoreById', 'storeId', shippingModel.productLineItems.items[0].fromStoreId)}" />
            </isif>
        </fieldset>

        <button class="btn btn-block btn-outline-primary btn-margin change-store ${shippingModel.selectedShippingMethod.storePickupEnabled && shippingModel.productLineItems.items[0].fromStoreId ? '' :
                                                                                 'd-none'}" name="changeStore"
            value="changeStore">
            ${Resource.msg('button.change.store', 'instorePickup', null)}
        </button>

        <fieldset
            class="shipping-address-block ${shippingModel.selectedShippingMethod.storePickupEnabled ? 'd-none' : ''}">
            <span class="checkout-summary-title-1 d-block mb-3">${Resource.msg('shipping.summary.title', 'checkout', null)}</span>
            <isinclude template="checkout/shipping/shippingAddress" />
        </fieldset>

        <iscomment>
            <fieldset
                class="gift-message-block ${shippingModel.selectedShippingMethod.storePickupEnabled ? 'd-none' : ''}">
                <isinclude template="checkout/shipping/isGift" />
            </fieldset>
        </iscomment>
    </div>

    <div class="view-address-block ${shippingModel.shippingAddress ? '' : 'd-none'}">
        <isinclude template="checkout/shipping/shippingCard" />
    </div>

    <fieldset class="shipping only-visible col-12 col-lg-7">
        <span class="checkout-summary-title-2 d-block mb-3">${Resource.msg('check.shipping.summary.title', 'checkout', null)}</span>
        <isinclude template="checkout/shipping/shippingMethod" />
    </fieldset>

    <input type="hidden" name="${pdict.csrf.tokenName}" value="${pdict.csrf.token}" />
    </form>
</div>